{"name": "test_login_with_wrong_username_and_correct_password", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"txtUsername\"]\"}\n  (Session info: chrome=101.0.4951.54)\nStacktrace:\n0   chromedriver                        0x00000001032692c9 chromedriver + 5120713\n1   chromedriver                        0x00000001031f7e33 chromedriver + 4656691\n2   chromedriver                        0x0000000102de7158 chromedriver + 393560\n3   chromedriver                        0x0000000102e1bedd chromedriver + 610013\n4   chromedriver                        0x0000000102e1c161 chromedriver + 610657\n5   chromedriver                        0x0000000102e4e244 chromedriver + 815684\n6   chromedriver                        0x0000000102e394ad chromedriver + 730285\n7   chromedriver                        0x0000000102e4bf41 chromedriver + 806721\n8   chromedriver                        0x0000000102e39373 chromedriver + 729971\n9   chromedriver                        0x0000000102e0f609 chromedriver + 558601\n10  chromedriver                        0x0000000102e10635 chromedriver + 562741\n11  chromedriver                        0x000000010323bb1d chromedriver + 4934429\n12  chromedriver                        0x0000000103240295 chromedriver + 4952725\n13  chromedriver                        0x00000001032453cf chromedriver + 4973519\n14  chromedriver                        0x0000000103240cba chromedriver + 4955322\n15  chromedriver                        0x000000010321b37c chromedriver + 4801404\n16  chromedriver                        0x000000010325ac68 chromedriver + 5061736\n17  chromedriver                        0x000000010325adef chromedriver + 5062127\n18  chromedriver                        0x00000001032705e5 chromedriver + 5150181\n19  libsystem_pthread.dylib             0x00007ff8090c54f4 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff8090c100f thread_start + 15", "trace": "request = <FixtureRequest for <Function test_login_with_wrong_username_and_correct_password>>, _pytest_bdd_example = {}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../PycharmProjects/Assignment2-PythonBDD-Selenium/venv/lib/python3.8/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../PycharmProjects/Assignment2-PythonBDD-Selenium/venv/lib/python3.8/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../PycharmProjects/Assignment2-PythonBDD-Selenium/venv/lib/python3.8/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\ndev/test/step_defs/test_login_steps.py:22: in open_url\n    assert browser.find_element_by_id('txtUsername').is_displayed()\n../../PycharmProjects/Assignment2-PythonBDD-Selenium/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:473: in find_element_by_id\n    return self.find_element(by=By.ID, value=id_)\n../../PycharmProjects/Assignment2-PythonBDD-Selenium/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:1248: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n../../PycharmProjects/Assignment2-PythonBDD-Selenium/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:425: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10a9b79d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff8090c54f4 _pthread_start + 125\\\\n20  libsystem_pthread.dylib             0x00007ff8090c100f thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"txtUsername\"]\"}\nE         (Session info: chrome=101.0.4951.54)\nE       Stacktrace:\nE       0   chromedriver                        0x00000001032692c9 chromedriver + 5120713\nE       1   chromedriver                        0x00000001031f7e33 chromedriver + 4656691\nE       2   chromedriver                        0x0000000102de7158 chromedriver + 393560\nE       3   chromedriver                        0x0000000102e1bedd chromedriver + 610013\nE       4   chromedriver                        0x0000000102e1c161 chromedriver + 610657\nE       5   chromedriver                        0x0000000102e4e244 chromedriver + 815684\nE       6   chromedriver                        0x0000000102e394ad chromedriver + 730285\nE       7   chromedriver                        0x0000000102e4bf41 chromedriver + 806721\nE       8   chromedriver                        0x0000000102e39373 chromedriver + 729971\nE       9   chromedriver                        0x0000000102e0f609 chromedriver + 558601\nE       10  chromedriver                        0x0000000102e10635 chromedriver + 562741\nE       11  chromedriver                        0x000000010323bb1d chromedriver + 4934429\nE       12  chromedriver                        0x0000000103240295 chromedriver + 4952725\nE       13  chromedriver                        0x00000001032453cf chromedriver + 4973519\nE       14  chromedriver                        0x0000000103240cba chromedriver + 4955322\nE       15  chromedriver                        0x000000010321b37c chromedriver + 4801404\nE       16  chromedriver                        0x000000010325ac68 chromedriver + 5061736\nE       17  chromedriver                        0x000000010325adef chromedriver + 5062127\nE       18  chromedriver                        0x00000001032705e5 chromedriver + 5150181\nE       19  libsystem_pthread.dylib             0x00007ff8090c54f4 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff8090c100f thread_start + 15\n\n../../PycharmProjects/Assignment2-PythonBDD-Selenium/venv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:247: NoSuchElementException"}, "description": "/Users/shahzadakram/Documents/selenium-python-bdd-framework/dev/test/features/login.feature: Login with wrong username and correct password", "attachments": [{"name": "log", "source": "8a866988-9bc7-47fb-8159-fe19f4b51bfd-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "13bfe3cf-7e0b-4382-a137-3508d8cb9430-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "c35e21ba-fe90-4a48-9e1c-20f661b37a2f-attachment.txt", "type": "text/plain"}], "start": 1652281200762, "stop": 1652281235867, "uuid": "5e0d29e5-0c65-4c57-8a40-a0fb890d6d40", "historyId": "9f6176c44ff41a57513e5f38069dd6c4", "testCaseId": "d1f16bbd10ae204cc421e6dc0590ef83", "fullName": "dev.test.step_defs.test_login_steps#test_login_with_wrong_username_and_correct_password", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "tag", "value": "Login_wrong_username"}, {"name": "parentSuite", "value": "dev.test.step_defs"}, {"name": "suite", "value": "test_login_steps"}, {"name": "host", "value": "Shahzads-MacBook-Pro.local"}, {"name": "thread", "value": "4276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "dev.test.step_defs.test_login_steps"}]}